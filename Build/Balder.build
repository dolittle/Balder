<?xml version="1.0"?>
<project name="Balder" default="All" basedir="..">
	<description>Main build file for Balder</description>

	<property name="Path.Root" value="${project::get-base-directory()}"/>
	<property name="Path.Tools" value="${Path.Root}/Tools"/>
	<property name="Path.NAnt" value="${Path.Tools}/NAnt"/>
	<property name="Path.Typemock" value="${Path.Root}/Tools/Typemock"/>
	<property name="Path.Drop" value="${Path.Root}/Drop" unless="${environment::variable-exists('BUILD_ID')}"/>
	<!-- Overriding if we are running inside of Hudson, that way we get our binaries in the right place -->
	<property name="Path.Drop" value="${environment::get-variable('WORKSPACE')}/../builds/${environment::get-variable('BUILD_ID')}" if="${environment::variable-exists('BUILD_ID')}"/>
	<property name="Path.Components" value="${Path.Root}/Components"/>
	<property name="Path.Source" value="${Path.Root}/Source"/>
	<property name="Path.Tests" value="${Path.Root}/Tests"/>
	<property name="Path.Keys" value="${Path.Root}/Keys"/>
	<property name="GlobalKeyFile" value="${Path.Keys}/Balder.snk"/>
	<property name="DropBoxPath" value="c:\DropBox\My DropBox\Public\Balder\Builds"/>

	<target name="All">
		<loadtasks assembly="${Path.NAnt}/Balder.Build.Tasks.dll" />

		<GetVersion/>
		<echo>Building version : ${Build.Version}</echo>


		<echo>Drop path = ${Path.Drop}</echo>
		<echo>Test path = ${Path.Tests}</echo>
		
		<call target="Configure"/>
		<call target="SilverlightPlatform"/>
		<echo>Will deploy to CodePlex : ${Build.ShouldDeploy}</echo>
		<call target="DropToDropBox"/>
		
		<IncreaseVersion/>
		
	</target>

	<target name="Clean">
		<delete dir="${Path.Drop}"/>
		<delete dir="${Path.Tests}"/>
	</target>

	<target name="Configure">
		<property name="Build.Config" value="Release" overwrite="false"/>
		<property name="Build.AssemblyInfo" value="${Path.Source}/Common/GlobalAssemblyInfo.cs"/>
		<call target="Configure${Build.Config}"/>
	</target>

	<target name="ConfigureDebug">
		<property name="Build.Debug" value="true"/>
		<property name="Build.Optimize" value="false"/>
		<property name="Global.Build.Defines" value="DEBUG, TRACE"/>
	</target>

	<target name="ConfigureRelease">
		<property name="Build.Debug" value="false"/>
		<property name="Build.Optimize" value="true"/>
		<property name="Global.Build.Defines" value="TRACE, STRONG"/>
	</target>

	<target name="ConfigureSilverlightPlatform">
		<property name="Build.Defines" value="${Global.Build.Defines},SILVERLIGHT,SILVERLIGHT_30,NO_ASSEMBLY_SCANNING,NO_WEB,NO_PARTIAL_TRUST,NO_EXCEPTION_SERIALIZATION,NO_DEBUG_SYMBOLS"/>
		<property name="Current.Path.Drop" value="${Path.Drop}/Silverlight"/>
		<property name="Current.Path.Components" value="${Path.Components}/Siilverlight"/>
		<property name="Current.Path.Tests" value="${Path.Tests}/Silverlight"/>
		<property name="SilverlightFrameworkPath" value="${Current.Path.Components}\Framework\3"/>
		<assemblyfileset id="Current.SystemAssemblies">
			<include name="${SilverlightFrameworkPath}/System.dll"/>
			<include name="${SilverlightFrameworkPath}/System.Core.dll"/>
			<include name="${SilverlightFrameworkPath}/System.Windows.dll"/>
			<include name="${SilverlightFrameworkPath}/System.Windows.Browser.dll"/>
			<include name="${SilverlightFrameworkPath}/System.Xml.dll"/>
		</assemblyfileset>
		<assemblyfileset id="Current.TestAssemblies">
			
			<include name="${Current.Path.Components}/nunit.framework.dll"/>
			<include name="${Current.Path.Components}/nunit.silverlight.dll"/>
			<include name="${Path.Components}/TypeMock/TypeMock.dll"/>
			<include name="${Path.Components}/TypeMock/TypeMock.ArrangeActAssert.dll"/>
			<include name="${Path.Components}/TypeMock/TypeMock.Isolator.VisualBasic.dll"/>
			<include name="${Current.Path.Components}/CThru.dll"/>
			<include name="${Current.Path.Components}/CThru.Silverlight.dll"/>
			<include name="${Current.Path.Components}/Castle.Core_SL.dll"/>
			<include name="${Current.Path.Components}/Castle.DynamicProxy_SL.dll"/>
			<include name="${Current.Path.Components}/FlawlessCode.MissingTypes.dll"/>
			<include name="${Current.Path.Components}/moq_sl.dll"/>
		</assemblyfileset>
		<MergedFileSet id="Current.TestRunnerAssemblies">
			<fileset refid="Current.SystemAssemblies"/>
			<fileset refid="Current.TestAssemblies"/>
			<include name="${Current.Path.Components}/Framework/3/agcore.dll"/>
		</MergedFileSet>
	</target>

	<target name="SilverlightPlatform">


		<if test="${framework::exists('silverlight-3.0')}">
			<property name="nant.settings.currentframework" value="silverlight-3.0"/>
			<property name="Build.Platform" value="silverlight-3.0"/>
			<call target="ConfigureSilverlightPlatform"/>
			<call target="Core"/>
			<call target="Silverlight"/>
			<call target="SilverlightDependencyDrops"/>
			<call target="Test"/>
		</if>

		<if test="${not(framework::exists('silverlight-3.0'))}">
			<echo message="Silverlight v3.0 is not available. Skipping platform."/>
		</if>

	</target>

	<target name="Core" depends="Configure">
		<mkdir dir="${Current.Path.Drop}"/>

		<!-- keyfile="${GlobalKeyFile}" -->
		<csc
				 noconfig="true"
				 warnaserror="false"
				 target="library"
				 debug="${Build.Debug}"
				 optimize="${Build.Optimize}"
				 define="${Build.Defines}"
				 output="${Current.Path.Drop}/Balder.Core.dll"
				 
				 >
			<!--doc="${Current.Path.Drop}/Balder.Core.xml"-->
			<sources basedir="${Path.Source}">
				<include name="${Build.AssemblyInfo}"/>
				<include name="Balder.Core/**/*.cs"/>
			</sources>
			<references>
				<include name="mscorlib.dll"/>
				<include name="System.dll"/>
				<include name="System.Core.dll"/>
				<include name="System.Net.dll"/>
				<include name="System.Windows.dll"/>
				<include name="System.Xml.dll"/>
				<include name="${Current.Path.Components}/System.Xml.Linq.dll" if="${Build.Platform == 'silverlight-3.0'}"/>
				<include name="${Current.Path.Components}/Ninject.Core.dll"/>
			</references>
		</csc>
	</target>

	<target name="CompileCoreTests">
		<call target="ConfigureDebug"/>
		<mkdir dir="${Current.Path.Tests}"/>

		<fileset id="ProjectAssemblies">
			<include name="${Current.Path.Components}/Ninject.Core.dll"/>
			<include name="${Current.Path.Drop}/Balder.Core.dll"/>
		</fileset>
		
		<MergedFileSet id="Assemblies">
			<fileset refid="Current.SystemAssemblies"/>
			<fileset refid="Current.TestAssemblies"/>
			<fileset refid="ProjectAssemblies"/>
		</MergedFileSet>


		<property name="nant.settings.currentframework" value="net-3.5"/>
		<property name="Build.Platform" value="net-3.5"/>
		<!-- keyfile="${GlobalKeyFile}" -->
		<csc
				 noconfig="true"
				 warnaserror="false"
				 target="library"
				 debug="${Build.Debug}"
				 optimize="${Build.Optimize}"
				 define="${Build.Defines}"
				 output="${Current.Path.Tests}/Balder.Core.Tests.dll"
				 >
			<sources basedir="${Path.Source}/Balder.Core.Tests">
				<include name="${Build.AssemblyInfo}"/>
				<include name="**/*.cs"/>
			</sources>
			<resources basedir="${Path.Source}/Balder.Core.Tests" prefix="Balder.Core.Tests" dynamicprefix="true">
				<include name="**/*.resx"/>
			</resources>
			<references refid="Assemblies"/>
		</csc>

		<loadtasks assembly="${Path.Typemock}/TypeMock.NAntBuild.dll" />

		
		<typemockstart/>

		<MergedFileSet id="TestRunnerAssemblies">
			<fileset refid="Current.TestRunnerAssemblies"/>
			<fileset refid="ProjectAssemblies"/>
			
		</MergedFileSet>

		<nunit2>
			<formatter type="Xml" usefile="true" extension=".xml" outputdir="${Current.Path.Tests}/results"/>
			<test>
				<assemblies>
					<include name="${Current.Path.Tests}/Balder.Core.Tests.dll"/>
				</assemblies>
				
				<references refid="TestRunnerAssemblies"/>
			</test>
		</nunit2>
		
		<typemockstop/>
	</target>

	<target name="Silverlight" depends="Core">
		<mkdir dir="${Current.Path.Drop}"/>
		<!-- keyfile="${GlobalKeyFile}" -->
		<csc
				 noconfig="true"
				 warnaserror="false"
				 target="library"
				 debug="${Build.Debug}"
				 optimize="${Build.Optimize}"
				 define="${Build.Defines}"
				 output="${Current.Path.Drop}/Balder.Silverlight.dll"
				 >
			<sources basedir="${Path.Source}">
				<include name="${Build.AssemblyInfo}"/>
				<include name="Balder.Silverlight/**/*.cs"/>
			</sources>
			<references basedir="${Current.Path.Drop}">
				<include name="mscorlib.dll"/>
				<include name="System.dll"/>
				<include name="System.Core.dll"/>
				<include name="System.Net.dll"/>
				<include name="System.Windows.dll"/>
				<include name="System.Xml.dll"/>
				<include name="${Current.Path.Components}/System.Windows.Browser.dll" if="${Build.Platform == 'silverlight-3.0'}"/>
				<include name="${Current.Path.Components}/Ninject.Core.dll"/>
				<include name="Balder.Core.dll"/>
				<include name="Balder.Core.SoftwareRendering.dll"/>
			</references>
		</csc>
	</target>
	
	<target name="SilverlightDependencyDrops" depends="Silverlight">
		<copy todir="${Current.Path.Drop}">
			<fileset basedir="${Path.Components}\Siilverlight">
				<include name="ninject.core.dll"/>
			</fileset>
		</copy>
	</target>

	<target name="DropToDropBox">
		<if test="${directory::exists(DropBoxPath)}">
			<property name="DropBoxDrop" value="${DropBoxPath}\${Build.Version}"/>

			<zip zipfile="${DropBoxDrop}\Balder_${Build.Config}.zip">
				<fileset basedir="${Current.Path.Drop}">
					<include name="**\*"/>
				</fileset>
			</zip>
		</if>
	</target>
	
	<target name="Test">
		
		<!--<call target="CompileCoreTests"/>-->
	</target>

</project>